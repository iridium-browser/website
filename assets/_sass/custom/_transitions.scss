///
/// Transitions - souldanger.industries
///

/* page fade-in */

	#fade-in, .fade-in {
		animation: fadeIn #{_duration(fade-in)};
		-webkit-animation: fadeIn #{_duration(fade-in)}; /* Safari and Chrome */
	}
	@include keyframes(fadeIn) {
		  0% { opacity:0.5; }
		100% { opacity:1; }
	}
	@mixin keyframes($name) {
		@-webkit-keyframes #{$name} {
			@content;
		}
		@keyframes #{$name} {
			@content;
		}
	}


/// On scroll.

/* fade-in + scale */

	.fade-in-scale {
		@include vendor('transition', (
			'transform #{_duration(feature-icon)} ease',
			'opacity #{_duration(feature-icon)} ease'
		));

		&.inactive {
			@include vendor('transform', 'scale(0.985)');
			opacity: 0;
		}
	}


/* slide-in + scale */

	.slide-in-scale {
		@include vendor('transition', ( 
			'transform #{_duration(feature-icon)} ease-in-out',
			'opacity #{_duration(feature-icon)} ease-in-out'
		));

		&.inactive {
			@include vendor('transform', 'scale(0.925) translate(0, -2.5%)');
			opacity: 0;
		}
	}
	

/* downloads - slide-in + up */

	.os-transition, .slide-in-up {
		.icon-slide-in-up {
			@include vendor('transition', ( 
				'transform #{_duration(dl-icon)} ease'
			));
		}
		.label-slide-in-up {
			@include vendor('transition', ( 
				'transform #{_duration(dl-icon)} ease',
				'opacity #{_duration(dl-icon-opacity)} ease'
			));
		}
		@for $i from 2 through _misc(max-dl-icon) {
			&:nth-child(#{$i}) {
				.icon-slide-in-up  {
					@include vendor('transition-delay', '#{(_duration(dl-icon-delay) * 0.25 * $i)}');
				}
				.label-slide-in-up  {
					@include vendor('transition-delay', '#{(_duration(dl-icon-delay) * 0.25 * $i)}');
				}
			}
		}
		&.inactive {
			.icon-slide-in-up {
				@include vendor('transform', 'translate3d(0, 2rem, 0)');
			}
			.label-slide-in-up {
				@include vendor('transform', 'translate3d(0, 4rem, 0)');
				opacity: 0;
			}
		}
	}

/* enterprise - slide up */

	.slide-up {
		.icon-slide-up {
			@include vendor('transition', ( 
				'transform #{_duration(feature-icon)} ease'
			));
		}
		.text-slide-up {
			@include vendor('transition', ( 
				'transform #{_duration(feature-icon)} ease',
			));
		}
		&.inactive {
			.icon-slide-up {
				@include vendor('transform', 'translate3d(0, 2rem, 0)');
			}
			.text-slide-up {
				@include vendor('transform', 'translate3d(0, 4rem, 0)');
			}
		}
	}


/* about - fade + slide + scale */

	.about-transition {
		@include vendor('transition', (
			'transform #{_duration(feature)} ease-in-out',
			'opacity #{_duration(feature)} ease-in-out'
		));

		&.inactive {
			@include vendor('transform', 'scale(0.95) translate3d(0.35rem, 0.35rem, 0)');
			opacity: 0;
			
			&:nth-child(odd) { 
				@include vendor('transform', 'scale(0.95) translate3d(-0.35rem, 0.35rem, 0)');
			}
		}
	}

/* fade-in + rotate + scale */

	.fade-rotate-scale {
		.rotator {
			@include vendor('transition', (
				'transform #{_duration(feature-icon)} ease-in-out',
				'opacity #{_duration(feature-icon)} ease-in-out'
			));
		}
		.fader {
			@include vendor('transition', (
				'transform #{_duration(feature-icon)} ease-in-out',
				'opacity #{_duration(feature-icon)} ease-in-out'
			));
		}
		@for $i from 2 through _misc(max-feature-icon) {
			&:nth-child(#{$i}) {
				.icon-rotator {
					@include vendor('transition-delay', '#{(_duration(feature-icon) * 0.25 * $i)}');
				}
				.label-fader {
					@include vendor('transition-delay', '#{(_duration(feature-icon) * 0.25 * $i)}');
				}
			}
		}
		&.inactive {
			@include vendor('transform', 'scale(0.9) rotate(#{_misc(feature-icon-deg)})');
			opacity: 0;

			.rotator {
				@include vendor('transform', 'scale(0.9) rotate(#{_misc(feature-icon-deg)})');
				opacity: 0;
			}
			.fader {
				@include vendor('transform', 'scale(0.9))');
				opacity: 0;
			}
		}
	}